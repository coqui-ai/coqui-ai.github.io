{"version":3,"sources":["webpack:///./src/pages/email/[token].tsx"],"names":["VERIFY_EMAIL","gql","TokenPage","token","useState","verifyStatus","setVerifyStatus","errorInfo","setErrorInfo","useMutation","verifyEmail","verifying","refetch","useProfile","useEffect","variables","then","data","errors","navigate","catch","hasSkipNav","title","href"],"mappings":"4OAgBMA,EAAeC,YAAH,2LAgEHC,UApDa,SAAC,GAAc,IAAZC,EAAY,EAAZA,MAC7B,EAAwCC,mBAAS,aAA1CC,EAAP,KAAqBC,EAArB,KACA,EAAkCF,mBAAS,IAApCG,EAAP,KAAkBC,EAAlB,KACA,EAAqCC,YAAYT,GAA1CU,EAAP,KAAsBC,EAAtB,KAAsBA,UACdC,EAAYC,cAAZD,QAwBR,OAtBAE,qBAAU,WACRJ,EAAY,CACVK,UAAW,CACTZ,WAGDa,MAAK,YAAc,IAAXC,EAAW,EAAXA,KACHA,EAAKP,YAAYQ,QACnBZ,EAAgB,SAChBE,EAAaS,EAAKP,YAAYQ,OAAO,GAAGA,OAAO,MAE/CN,IACAN,EAAgB,YAChBa,YAAS,eAGZC,OAAM,WACLd,EAAgB,SAChBE,EAAa,SAEhB,CAACL,EAAOO,EAAaE,IAGtB,kBAAC,IAAD,CAAYS,YAAY,GACtB,kBAAC,IAAD,MAEA,kBAAC,IAAD,CAAYC,MAAM,8BACfX,GAA+B,cAAjBN,GAAgC,8DAC7B,aAAjBA,GAA+B,oEACd,UAAjBA,GACC,oCACE,kEAAwCE,GACxC,oCACS,IACP,uBAAGgB,KAAK,gEAAR,cAAsF,IAFxF,oBASN,kBAAC,IAAD","file":"component---src-pages-email-[token]-tsx-a9551c0b0782a30aa628.js","sourcesContent":["/**\n * Copyright Coqui GmbH\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport SEO from 'components/SEO';\nimport RootLayout from 'layouts/Root';\nimport GogleAnalyticsCookieConsent from 'components/Cookies';\nimport { gql, useMutation } from '@apollo/client';\nimport { navigate } from 'gatsby';\nimport { CenterWell } from 'layouts/Root/components/Styled';\nimport { useProfile } from '../../../utils/auth';\n\nconst VERIFY_EMAIL = gql`\n  mutation verifyEmail($token: String!) {\n    verifyEmail(token: $token) {\n      errors {\n        field\n        errors\n      }\n      status\n    }\n  }\n`;\n\nconst TokenPage: React.FC = ({ token }) => {\n  const [verifyStatus, setVerifyStatus] = useState('verifying');\n  const [errorInfo, setErrorInfo] = useState('');\n  const [verifyEmail, { verifying }] = useMutation(VERIFY_EMAIL);\n  const { refetch } = useProfile();\n\n  useEffect(() => {\n    verifyEmail({\n      variables: {\n        token\n      }\n    })\n      .then(({ data }) => {\n        if (data.verifyEmail.errors) {\n          setVerifyStatus('error');\n          setErrorInfo(data.verifyEmail.errors[0].errors[0]);\n        } else {\n          refetch();\n          setVerifyStatus('verified');\n          navigate('/voices');\n        }\n      })\n      .catch(() => {\n        setVerifyStatus('error');\n        setErrorInfo('');\n      });\n  }, [token, verifyEmail, refetch]);\n\n  return (\n    <RootLayout hasSkipNav={false}>\n      <SEO />\n\n      <CenterWell title=\"Email address verification\">\n        {verifying || (verifyStatus === 'verifying' && <p>Verifying your email address...</p>)}\n        {verifyStatus === 'verified' && <p>Your email address has been verified!</p>}\n        {verifyStatus === 'error' && (\n          <>\n            <p>Error verifying your email address: {errorInfo}</p>\n            <p>\n              Please{' '}\n              <a href=\"mailto:info@coqui.ai?subject=I can't verify my email address\">contact us</a>{' '}\n              to solve this.\n            </p>\n          </>\n        )}\n      </CenterWell>\n\n      <GogleAnalyticsCookieConsent />\n    </RootLayout>\n  );\n};\n\nexport default TokenPage;\n"],"sourceRoot":""}