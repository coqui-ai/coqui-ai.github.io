{"version":3,"sources":["webpack:///./src/pages/blog/data/installation.mdx"],"names":["pageQuery","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sRASaA,EAAY,aAKZC,EAAe,GACtBC,EAAc,CAClBF,YACAC,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,uBAAK,kCAAMC,WAAW,OAAU,CAC5B,UAAa,kBADZ,2CAIL,+CAA8B,0BAAYA,WAAW,KAAvB,OAA9B,wEACU,0BAAYA,WAAW,KAAvB,QADV,oBAEA,iCAAgB,+BAAGA,WAAW,KAAQ,CAClC,KAAQ,+CADI,2BAAhB,qCAGA,iBAAQ,CACN,GAAM,QACN,MAAS,CACP,SAAY,aAEb,+BAAGA,WAAW,MAAS,CACtB,KAAQ,SACR,aAAc,kBACd,UAAa,kBACZ,iCAAKA,WAAW,KAAQ,CACvB,MAAS,6BACT,MAAS,KACT,OAAU,KACV,UAAa,QACb,QAAW,cALZ,OAOL,kCAAMA,WAAW,OAAU,CACnB,KAAQ,eACR,EAAK,wjBAlBb,SAqBA,wIACc,0BAAYA,WAAW,KAAvB,gBADd,qHAE0C,0BAAYA,WAAW,KAAvB,QAF1C,oBAGA,+NAEA,iBAAQ,CACN,GAAM,QACN,MAAS,CACP,SAAY,aAEb,+BAAGA,WAAW,MAAS,CACtB,KAAQ,SACR,aAAc,kBACd,UAAa,kBACZ,iCAAKA,WAAW,KAAQ,CACvB,MAAS,6BACT,MAAS,KACT,OAAU,KACV,UAAa,QACb,QAAW,cALZ,OAOL,kCAAMA,WAAW,OAAU,CACnB,KAAQ,eACR,EAAK,wjBAlBb,SAqBA,6FACF,+BAAGA,WAAW,KAAQ,CAChB,KAAQ,gDADd,iBADE,oBAIA,oCAAmB,0BAAYA,WAAW,KAAvB,wBAAnB,KACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,0DAOL,sCACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,wJAUL,iBAAQ,CACN,GAAM,UACN,MAAS,CACP,SAAY,aAEb,+BAAGA,WAAW,MAAS,CACtB,KAAQ,WACR,aAAc,oBACd,UAAa,kBACZ,iCAAKA,WAAW,KAAQ,CACvB,MAAS,6BACT,MAAS,KACT,OAAU,KACV,UAAa,QACb,QAAW,cALZ,OAOL,kCAAMA,WAAW,OAAU,CACnB,KAAQ,eACR,EAAK,wjBAlBb,WAqBA,0EAAyD,+BAAGA,WAAW,KAAQ,CAC3E,KAAQ,mDAD6C,sBAAzD,oCAIA,8CACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,wFAML,wDACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,iFAML,qGAIA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,6LAcTJ,EAAWK,gBAAiB","file":"component---src-pages-blog-data-installation-mdx-659a28bad46b019a65ba.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kdavis/Code/coqui-ai/coqui-ai.github.io/src/templates/BlogTemplate.tsx\";\nimport { graphql } from 'gatsby';\nexport const pageQuery = graphql`\n  query($fileAbsolutePath: String) {\n    ...SidebarPageFragment\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  pageQuery,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install @zendeskgarden/svg-icons\n`}</code></pre>\n    <p>{`The package contains a `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` folder with individual SVG icons along with a combined\n“spritemap” `}<inlineCode parentName=\"p\">{`dist`}</inlineCode>{` of SVG symbols.`}</p>\n    <p>{`View the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/zendeskgarden/svg-icons\"\n      }}>{`zendeskgarden/svg-icons`}</a>{` repository for more information.`}</p>\n    <h2 {...{\n      \"id\": \"usage\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#usage\",\n        \"aria-label\": \"usage permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"xmlns\": \"http://www.w3.org/2000/svg\",\n          \"width\": \"16\",\n          \"height\": \"16\",\n          \"focusable\": \"false\",\n          \"viewBox\": \"0 0 16 16\"\n        }}>{`\n  `}<path parentName=\"svg\" {...{\n            \"fill\": \"currentColor\",\n            \"d\": \"M4.441 7.38l.095.083.939.939-.708.707-.939-.939-2 2-.132.142a2.829 2.829 0 003.99 3.99l.142-.132 2-2-.939-.939.707-.708.94.94a1 1 0 01.083 1.32l-.083.094-2 2A3.828 3.828 0 01.972 9.621l.15-.158 2-2A1 1 0 014.34 7.31l.101.07zm7.413-3.234a.5.5 0 01.057.638l-.057.07-7 7a.5.5 0 01-.765-.638l.057-.07 7-7a.5.5 0 01.708 0zm3.023-3.025a3.829 3.829 0 01.15 5.257l-.15.158-2 2a1 1 0 01-1.32.083l-.094-.083-.94-.94.708-.707.939.94 2-2 .132-.142a2.829 2.829 0 00-3.99-3.99l-.142.131-2 2 .939.939-.707.708-.94-.94a1 1 0 01-.082-1.32l.083-.094 2-2a3.828 3.828 0 015.414 0z\"\n          }}></path>\n        </svg></a>{`Usage`}</h2>\n    <p>{`Garden SVGs come in two flavors – monochrome and two-tone. The primary fill/stroke will always\nbe specified as `}<inlineCode parentName=\"p\">{`currentColor`}</inlineCode>{`. This means CSS text color style will cascade to the icon. Two-tone\nicons can receive a secondary color via the `}<inlineCode parentName=\"p\">{`fill`}</inlineCode>{` style property.`}</p>\n    <p>{`Once installed, SVG icons may be accessed in a variety of ways. The following list demonstrates\nseveral possibilities, however usage will vary depending on the particular needs of your application.`}</p>\n    <h3 {...{\n      \"id\": \"react\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#react\",\n        \"aria-label\": \"react permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"xmlns\": \"http://www.w3.org/2000/svg\",\n          \"width\": \"16\",\n          \"height\": \"16\",\n          \"focusable\": \"false\",\n          \"viewBox\": \"0 0 16 16\"\n        }}>{`\n  `}<path parentName=\"svg\" {...{\n            \"fill\": \"currentColor\",\n            \"d\": \"M4.441 7.38l.095.083.939.939-.708.707-.939-.939-2 2-.132.142a2.829 2.829 0 003.99 3.99l.142-.132 2-2-.939-.939.707-.708.94.94a1 1 0 01.083 1.32l-.083.094-2 2A3.828 3.828 0 01.972 9.621l.15-.158 2-2A1 1 0 014.34 7.31l.101.07zm7.413-3.234a.5.5 0 01.057.638l-.057.07-7 7a.5.5 0 01-.765-.638l.057-.07 7-7a.5.5 0 01.708 0zm3.023-3.025a3.829 3.829 0 01.15 5.257l-.15.158-2 2a1 1 0 01-1.32.083l-.094-.083-.94-.94.708-.707.939.94 2-2 .132-.142a2.829 2.829 0 00-3.99-3.99l-.142.131-2 2 .939.939-.707.708-.94-.94a1 1 0 01-.082-1.32l.083-.094 2-2a3.828 3.828 0 015.414 0z\"\n          }}></path>\n        </svg></a>{`React`}</h3>\n    <p>{`A common approach for consuming SVG icons in React codebases is the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/@svgr/webpack\"\n      }}>{`@svgr/webpack`}</a>{` Webpack plugin.`}</p>\n    <p>{`Update your `}<inlineCode parentName=\"p\">{`webpackage.config.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n  test: /\\\\.svg$/,\n  use: ['@svgr/webpack'],\n}\n`}</code></pre>\n    <p>{`In your code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import SearchStroke from '@zendeskgarden/svg-icons/src/16/search-stroke.svg';\n\nconst App = () => (\n  <div>\n    <SearchStroke />\n  </div>\n);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"postcss\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#postcss\",\n        \"aria-label\": \"postcss permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"xmlns\": \"http://www.w3.org/2000/svg\",\n          \"width\": \"16\",\n          \"height\": \"16\",\n          \"focusable\": \"false\",\n          \"viewBox\": \"0 0 16 16\"\n        }}>{`\n  `}<path parentName=\"svg\" {...{\n            \"fill\": \"currentColor\",\n            \"d\": \"M4.441 7.38l.095.083.939.939-.708.707-.939-.939-2 2-.132.142a2.829 2.829 0 003.99 3.99l.142-.132 2-2-.939-.939.707-.708.94.94a1 1 0 01.083 1.32l-.083.094-2 2A3.828 3.828 0 01.972 9.621l.15-.158 2-2A1 1 0 014.34 7.31l.101.07zm7.413-3.234a.5.5 0 01.057.638l-.057.07-7 7a.5.5 0 01-.765-.638l.057-.07 7-7a.5.5 0 01.708 0zm3.023-3.025a3.829 3.829 0 01.15 5.257l-.15.158-2 2a1 1 0 01-1.32.083l-.094-.083-.94-.94.708-.707.939.94 2-2 .132-.142a2.829 2.829 0 00-3.99-3.99l-.142.131-2 2 .939.939-.707.708-.94-.94a1 1 0 01-.082-1.32l.083-.094 2-2a3.828 3.828 0 015.414 0z\"\n          }}></path>\n        </svg></a>{`PostCSS`}</h3>\n    <p>{`To consume SVG icons with PostCSS you may use the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/TrySound/postcss-inline-svg\"\n      }}>{`postcss-inline-svg`}</a>{`\nplugin to compile SVGs to CSS.`}</p>\n    <p>{`Configure the plugin:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"postcss-inline-svg\": {\n  \"path\": \"node_modules/@zendeskgarden/svg-icons/src\"\n}\n`}</code></pre>\n    <p>{`Load an SVG in your source CSS:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.icon {\n  background-image: svg-load('14/remove.svg', color: #007fab);\n}\n`}</code></pre>\n    <p>{`Build via PostCSS to inline the SVG into your destination CSS as a data URI:`}</p>\n    {\n      /* markdownlint-disable line-length */\n    }\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.icon {\n  background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14' height='14' viewBox='0 0 14 14' color='%23007FAB' ...\");\n}\n`}</code></pre>\n    {\n      /* markdownlint-enable line-length */\n    }\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}