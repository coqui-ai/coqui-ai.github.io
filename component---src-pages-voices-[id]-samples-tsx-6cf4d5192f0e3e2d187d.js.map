{"version":3,"sources":["webpack:///./src/layouts/Voices/components/Samples.tsx","webpack:///./src/pages/voices//samples.tsx"],"names":["SAMPLES","gql","DELETE_SAMPLE","SampleList","styled","ul","p","mediaQuery","theme","SampleBox","li","ButtonBox","SampleTitle","div","SampleControls","SampleControl","props","grow","Samples","voice_id","useQuery","variables","data","loading","useState","isDeleting","setIsDeleting","useMutation","update","cache","evict","id","fieldName","args","deleteSample","deleteSampleResults","useManyPlayers","currentTrack","Player","useEffect","reset","DeleteModal","onDelete","onCancel","to","ArrowLeft","size","voice","name","samples","map","sample","key","src","audio_url","Pause","color","variant","VideoCircle","href","target","download","Trash","onClick","MusicPlaylist","style","marginRight","SamplesPage","consentedToGoogleAnalytics","Root","hasSkipNav","showVoiceSearch","SEO","RequireAuth"],"mappings":"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","file":"component---src-pages-voices-[id]-samples-tsx-6cf4d5192f0e3e2d187d.js","sourcesContent":["/**\n * Copyright Coqui GmbH\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { Link } from 'gatsby';\nimport { Loading, OrangeButton, TitleBar } from 'layouts/Root/components/Styled';\nimport styled, { css } from 'styled-components';\nimport { mediaQuery } from '@zendeskgarden/react-theming';\nimport { ArrowCircleDown2, ArrowLeft, MusicPlaylist, Pause, Trash, VideoCircle } from 'iconsax-react';\nimport { Button } from '@zendeskgarden/react-buttons';\nimport { DeleteModal } from '../../Root/components/DeleteModal';\nimport { useManyPlayers } from './MediaPlayers';\n\nconst SAMPLES = gql`\n  query Samples($voice_id: String!) {\n    voice(id: $voice_id) {\n      id\n      name\n    }\n    samples(voice_id: $voice_id) {\n      id\n      name\n      audio_url\n    }\n  }\n`;\n\nconst DELETE_SAMPLE = gql`\n  mutation deleteSample($id: String!) {\n    deleteSample(id: $id) {\n      success\n      errors\n    }\n  }\n`;\n\nconst SampleList = styled.ul`\n  margin: 54px auto 16px;\n  width: 80%;\n\n  ${p => mediaQuery('down', 'sm', p.theme)} {\n    margin: 20px auto 16px;\n    width: 349px;\n  }\n`;\nconst SampleBox = styled.li`\n  width: 100%;\n\n  height: 135px;\n\n  background: #012b30;\n  border-radius: 8px;\n  border: 1px #012b30 solid;\n  margin-bottom: 18px;\n`;\nconst ButtonBox = styled.li`\n  display: flex;\n  justify-content: center;\n`;\nconst SampleTitle = styled.div`\n  height: 64px;\n  border-bottom: 1px solid #5eae91;\n  padding: 20px 38px;\n  color: white;\n  font-size: 24px;\n  font-weight: 600;\n\n  ${p => mediaQuery('down', 'sm', p.theme)} {\n    padding: 20px;\n  }\n`;\nconst SampleControls = styled.div`\n  height: 70px;\n  display: flex;\n`;\nconst SampleControl = styled.div`\n  flex-grow: ${props => props.grow || 0};\n  padding: 25px 38px;\n  color: #5eae91;\n  border-right: 1px solid #5eae91;\n  &:last-of-type {\n    border-right: none;\n  }\n\n  ${p => mediaQuery('down', 'sm', p.theme)} {\n    padding: 16px 20px;\n  }\n`;\n\nexport const Samples: React.FC = ({ voice_id }) => {\n  const { data, loading } = useQuery(SAMPLES, { variables: { voice_id } });\n\n  const [isDeleting, setIsDeleting] = useState(null);\n  const [deleteSample, deleteSampleResults] = useMutation(DELETE_SAMPLE, {\n    update: cache => {\n      cache.evict({\n        id: 'ROOT_QUERY',\n        fieldName: 'samples',\n        args: { voice_id }\n      });\n      cache.evict({\n        id: 'ROOT_QUERY',\n        fieldName: 'voices'\n      });\n    }\n  });\n  const { currentTrack, Player } = useManyPlayers();\n\n  useEffect(() => {\n    if (deleteSampleResults.data) {\n      setIsDeleting(null);\n      deleteSampleResults.reset();\n    }\n  }, [deleteSampleResults, setIsDeleting]);\n\n  if (loading) return <Loading />;\n\n  return (\n    <>\n      {isDeleting ? (\n        <DeleteModal\n          loading={deleteSampleResults.loading}\n          onDelete={() => deleteSample({ variables: { id: isDeleting.id } })}\n          onCancel={() => setIsDeleting(null)}\n        >\n          Are you sure you want to delete this audio sample?\n        </DeleteModal>\n      ) : (\n        ''\n      )}\n      <TitleBar>\n        <div\n          css={`\n            display: flex;\n            ${p => mediaQuery('down', 'sm', p.theme)} {\n              width: 319px;\n            }\n          `}\n        >\n          <Link\n            to={`/voices/${voice_id}/synthesize`}\n            css=\"\n              vertical-align: middle;\n              margin-right: 8px;\n              flex-grow: 0;\n              display: flex;\n              align-items: center;\n              justify-content: center;\n            \"\n          >\n            <ArrowLeft size={24} />\n          </Link>\n          <div css=\"flex-grow: 1;\">\n            <span css=\"font-size: 16px; font-weight: 400;\">\n              Samples for voice:\n            </span>\n            <div css=\"margin-top: 6px;\">\n              {data.voice.name}\n            </div>\n          </div>\n        </div>\n      </TitleBar>\n      <SampleList>\n        {data.samples.map(sample => (\n          <SampleBox key={sample.id}>\n            <SampleTitle>{sample.name}</SampleTitle>\n            <SampleControls>\n              <SampleControl\n                css={css`\n                  padding: 19px 38px;\n                `}\n              >\n                <Player src={sample.audio_url}>\n                  {currentTrack === sample.audio_url ? (\n                    <Pause size=\"32\" color=\"#ED8F1C\" variant=\"Bold\" />\n                  ) : (\n                    <VideoCircle size=\"32\" color=\"#ED8F1C\" variant=\"Bold\" />\n                  )}\n                </Player>\n              </SampleControl>\n              <SampleControl\n                css={css`\n                  padding: 16px 38px;\n                `}\n              >\n                <a\n                  href={sample.audio_url}\n                  target=\"_blank\"\n                  download\n                  css={css`\n                    color: unset !important;\n                    text-decoration: unset !important;\n                  `}\n                >\n                  Download\n                  <ArrowCircleDown2\n                    size=\"24\"\n                    color=\"#5EAE91\"\n                    variant=\"Bold\"\n                    css={css`\n                      min-height: 24px;\n                      position: relative;\n                      top: 7px;\n                      margin-left: 7px;\n                    `}\n                  />\n                </a>\n              </SampleControl>\n              <SampleControl grow={1}></SampleControl>\n              <SampleControl\n                css={css`\n                  padding: 19px 19px;\n                `}\n              >\n                <Trash\n                  onClick={() => setIsDeleting(sample)}\n                  size=\"32\"\n                  color=\"#CC3340\"\n                  variant=\"Bold\"\n                />\n              </SampleControl>\n            </SampleControls>\n          </SampleBox>\n        ))}\n        <ButtonBox>\n          <Link\n            to={`/voices/${voice_id}/synthesize`}\n            css={css`\n              display: block;\n\n              &,\n              &:hover {\n                text-decoration: none;\n              }\n            `}\n          >\n            <OrangeButton>\n              <MusicPlaylist size={16} color=\"#012B30\" variant=\"Bold\" style={{ marginRight: 10 }} />\n              Synthesize New Sample\n            </OrangeButton>\n          </Link>\n        </ButtonBox>\n      </SampleList>\n    </>\n  );\n};\n","/**\n * Copyright Coqui GmbH\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { useEffect } from 'react';\n// import navs from '../nav/blog';\nimport SEO from 'components/SEO';\nimport RootLayout from 'layouts/Root';\nimport { Link } from 'gatsby';\nimport { OrangeButton } from 'layouts/Root/components/Styled';\nimport { MusicPlaylist } from 'iconsax-react';\nimport GogleAnalyticsCookieConsent from 'components/Cookies';\nimport { consentedToGoogleAnalytics } from 'utils/GoogleAnalytics';\nimport { RequireAuth } from 'components/RequireAuth';\nimport { Samples } from 'layouts/Voices/components/Samples';\n\nconst SamplesPage: React.FC = ({ id }) => {\n  useEffect(() => {\n    consentedToGoogleAnalytics();\n  });\n\n  return (\n    <RootLayout hasSkipNav={false} showVoiceSearch={true}>\n      <SEO />\n      <RequireAuth>\n        <Samples voice_id={id} />\n      </RequireAuth>\n\n      <GogleAnalyticsCookieConsent />\n    </RootLayout>\n  );\n};\n\nexport default SamplesPage;\n"],"sourceRoot":""}