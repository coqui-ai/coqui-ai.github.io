{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/core-js/modules/es.object.from-entries.js","webpack:///./src/layouts/Auth/components/SignUpForm.tsx","webpack:///./src/pages/auth/signup.tsx"],"names":["$","iterate","createProperty","target","stat","fromEntries","iterable","obj","k","v","AS_ENTRIES","SIGN_UP","gql","SignUpForm","user","useAuth","login","useLoginEffect","useMutation","signUp","loading","useEffect","navigate","title","initialValues","email","password","password2","validate","values","errors","forEach","onSubmit","formik","variables","then","data","setStatus","Object","map","field","join","status","__all__","name","label","as","Input","type","AuthPage","consentedToGoogleAnalytics","Root","hasSkipNav","grayedBackground","SEO"],"mappings":"+EAAA,IAAIA,EAAI,EAAQ,QACZC,EAAU,EAAQ,QAClBC,EAAiB,EAAQ,QAI7BF,EAAE,CAAEG,OAAQ,SAAUC,MAAM,GAAQ,CAClCC,YAAa,SAAqBC,GAChC,IAAIC,EAAM,GAIV,OAHAN,EAAQK,GAAU,SAAUE,EAAGC,GAC7BP,EAAeK,EAAKC,EAAGC,KACtB,CAAEC,YAAY,IACVH,M,oNCILI,EAAUC,YAAH,+NAYAC,EAAa,WACxB,IAAMC,EAAOC,cACNC,EAASC,cAAhB,GACA,EAA8BC,YAAYP,GAAnCQ,EAAP,KAAiBC,EAAjB,KAAiBA,QAMjB,OAJAC,qBAAU,WACJP,GAAMQ,YAAS,aAClB,CAACR,IAGF,kBAAC,IAAD,CAAYS,MAAM,WAChB,kBAAC,IAAD,CACEC,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,UAAW,IAEbC,SAAU,SAAAC,GACR,IAAMC,EAAS,GAQf,MANA,CAAC,QAAS,WAAY,aAAaC,SAAQ,SAAAvB,GACpCqB,EAAOrB,KAAIsB,EAAOtB,GAAK,gBAG1BqB,EAAOH,UAAYG,EAAOF,YAAWG,EAAOH,UAAY,wBAErDG,GAETE,SAAU,WAAsBC,GAAtB,IAAGR,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACRP,EAAO,CAAEe,UAAW,CAAET,QAAOC,cAAcS,MAAK,YAAc,IAAXC,EAAW,EAAXA,KAC7CA,EAAKjB,OAAOW,OACdG,EAAOI,UACLC,OAAOjC,YACL+B,EAAKjB,OAAOW,OAAOS,KAAI,kBAAuB,CAAvB,EAAGC,MAAH,EAAUV,OAA4BW,KAAK,WAItEzB,EAAMS,EAAOC,SAKlB,gBAAGgB,EAAH,EAAGA,OAAH,OACC,kBAAC,IAAD,KACGA,WAAQC,QAAU,6BAAMD,EAAOC,SAAiB,KAEjD,kBAAC,IAAD,CAAOC,KAAK,QAAQC,MAAM,SAASC,GAAIC,IAAOC,KAAK,UAEnD,kBAAC,IAAD,CAAOJ,KAAK,WAAWC,MAAM,WAAWC,GAAIC,IAAOC,KAAK,aAExD,kBAAC,IAAD,CAAOJ,KAAK,YAAYC,MAAM,6BAA6BC,GAAIC,IAAOC,KAAK,aAE3E,kBAAC,IAAD,CAAQ5B,QAASA,GAAWN,GAA5B,iB,wBCjDGmC,UAdY,WAKzB,OAJA5B,qBAAU,WACR6B,iBAIA,kBAACC,EAAA,EAAD,CAAYC,YAAY,EAAOC,kBAAkB,GAC/C,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD","file":"component---src-pages-auth-signup-tsx-9a1839daed9342e3c1e6.js","sourcesContent":["var $ = require('../internals/export');\nvar iterate = require('../internals/iterate');\nvar createProperty = require('../internals/create-property');\n\n// `Object.fromEntries` method\n// https://github.com/tc39/proposal-object-from-entries\n$({ target: 'Object', stat: true }, {\n  fromEntries: function fromEntries(iterable) {\n    var obj = {};\n    iterate(iterable, function (k, v) {\n      createProperty(obj, k, v);\n    }, { AS_ENTRIES: true });\n    return obj;\n  }\n});\n","/**\n * Copyright Coqui GmbH\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { useEffect } from 'react';\nimport { useAuth, useLoginEffect } from '../../../../utils/auth';\nimport { Formik, Form } from 'formik';\nimport { useMutation, gql } from '@apollo/client';\nimport { navigate } from 'gatsby';\nimport { CenterWell } from 'layouts/Root/components/Styled';\nimport { Input } from '@zendeskgarden/react-forms';\nimport { Field, Submit } from 'layouts/Root/components/Forms';\n\nconst SIGN_UP = gql`\n  mutation SignUp($email: String!, $password: String!) {\n    signUp(email: $email, password: $password) {\n      errors {\n        field\n        errors\n      }\n      date_joined\n    }\n  }\n`;\n\nexport const SignUpForm = () => {\n  const user = useAuth();\n  const [login] = useLoginEffect();\n  const [signUp, { loading }] = useMutation(SIGN_UP);\n\n  useEffect(() => {\n    if (user) navigate('/voices');\n  }, [user]);\n\n  return (\n    <CenterWell title=\"Sign Up\">\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          password2: ''\n        }}\n        validate={values => {\n          const errors = {};\n\n          ['email', 'password', 'password2'].forEach(k => {\n            if (!values[k]) errors[k] = 'Required.';\n          });\n\n          if (values.password != values.password2) errors.password2 = 'Passwords must match';\n\n          return errors;\n        }}\n        onSubmit={({ email, password }, formik) =>\n          signUp({ variables: { email, password } }).then(({ data }) => {\n            if (data.signUp.errors) {\n              formik.setStatus(\n                Object.fromEntries(\n                  data.signUp.errors.map(({ field, errors }) => [field, errors.join(' ')])\n                )\n              );\n            } else {\n              login(email, password);\n            }\n          })\n        }\n      >\n        {({ status }) => (\n          <Form>\n            {status?.__all__ ? <div>{status.__all__}</div> : null}\n\n            <Field name=\"email\" label=\"E-Mail\" as={Input} type=\"email\" />\n\n            <Field name=\"password\" label=\"Password\" as={Input} type=\"password\" />\n\n            <Field name=\"password2\" label=\"Please repeat the password\" as={Input} type=\"password\" />\n\n            <Submit loading={loading || user}>Sign Up</Submit>\n          </Form>\n        )}\n      </Formik>\n    </CenterWell>\n  );\n};\n","/**\n * Copyright Coqui GmbH\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { useEffect } from 'react';\n// import navs from '../nav/blog';\nimport SEO from 'components/SEO';\nimport RootLayout from 'layouts/Root';\nimport { SignUpForm } from 'layouts/Auth/components/SignUpForm';\n\n// import { graphql, useStaticQuery } from 'gatsby';\nimport GogleAnalyticsCookieConsent from 'components/Cookies';\nimport { consentedToGoogleAnalytics } from 'utils/GoogleAnalytics';\n\nconst AuthPage: React.FC = () => {\n  useEffect(() => {\n    consentedToGoogleAnalytics();\n  });\n\n  return (\n    <RootLayout hasSkipNav={false} grayedBackground={true}>\n      <SEO />\n      <SignUpForm />\n      <GogleAnalyticsCookieConsent />\n    </RootLayout>\n  );\n};\n\nexport default AuthPage;\n"],"sourceRoot":""}